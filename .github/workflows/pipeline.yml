name: Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.9.2"
      - name: Install SQLFluff
        run: "pip install sqlfluff==0.8.2"
      - name: Lint SQL Files
        run: "./database/lint.sh"

  build:
    needs: [lint]
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
        working-directory: server
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node Environment
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Clean Install Packages
        run: npm ci
      - name: Test
        run: npm test
      - name: Build
        run: npm run build

  deploy:
    needs: [build]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # - name: Cache Docker layers
      #   uses: actions/cache@v2
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ runner.os }}-buildx-${{ github.sha }}
      #     restore-keys: |
      #       ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: server/
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/pratmat:alpha-latest
          # cache-from: type=local,src=/tmp/.buildx-cache
          # cache-to: type=local,dest=/tmp/.buildx-cache
